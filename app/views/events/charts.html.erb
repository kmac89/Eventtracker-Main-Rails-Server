<script type='text/javascript' src='/fullcalendar/fullcalendar.js'></script>
<script type="text/javascript" src="https://www.google.com/jsapi"></script>
<script type='text/javascript' src='/datejs/date.js'></script>
<link type="text/css" rel="stylesheet" href="/jquery-ui-1.8.13/css/redmond/jquery-ui-1.8.13.custom.css"/>
<script src="/jquery-ui-1.8.13/js/jquery-ui-1.8.13.custom.min.js" type="text/javascript" charset="utf-8"> </script>
<link href="/stylesheets/protovis.tipsy.css" type="text/css" rel="stylesheet"/>
<style type="text/css">
  [type="button"] {
    font-size: 1em;
  }

  #pickerContainer {
    margin-top:.9em;
  }
</style>

<div id="chart_div"></div>
<div class="buttonContainer">
  <button id="prevBtn" type="button"></button>
  <button id="nextBtn" type="button"></button>
</div>
<div id="pickerContainer" class="buttonContainer">
  Start Date: <input type="text" id="startPicker" class="datepicker" size="7">
  End Date: <input type="text" id="endPicker" class="datepicker" size="7">
</div>

<script type="text/javascript">
  unencryptedEvents = encryptionHelpers.unpackEncryptedEvents(<%= raw @contents %>)
</script>	
<script type="text/javascript">
  google.load("visualization", "1", {packages:["corechart"]});
  google.setOnLoadCallback(updatePieChart);

  var tagTimes=new Array();	
  // Data structure used to easily convert between the view used by the calendar
  //   and the labels used by the next/prev buttons
  var convertViewToDate = {'agendaDay': 'day', 'agendaWeek': 'week', 'month': 'month'}

  // invariant: User visited calendar before visiting pie chart. Make sure this is always true

  var startDate = new Date(sessionStorage.getItem('startDate'));
  //The end Date is exclusive. 
  var endDate = new Date(sessionStorage.getItem('endDate')).add(-1).days().set({hour: 23, minute: 59, second:59 })
  var pieChartTitle = sessionStorage.getItem('pieChartName');
  var calendarView = sessionStorage.getItem('view');

  //For the events given, groups the events by tags and computes the time that each group of events took.
  function computeTagTimes(filteredEvents) {
    for(var i=0; i< filteredEvents.length; i++){
      var event = filteredEvents[i];
      var startTime = event['startTime'];
      var endTime = event['endTime'];
      var totalTime = (endTime - startTime) * 1.0 / (1000 * 60 * 60);
      var tag = event['tag'];
      if (tag==null || tag=='Select a tag') {
        tag='Other';	
      }
      var prevValue=tagTimes['tag'];
      if (prevValue==null) {
        prevValue=0;
      }
		  tagTimes[tag]=prevValue+totalTime;	
    }
  }

  // Returns the title of the pie chart that reflects what range of dates the pie chart is covering.
  // The parameter selectDates is true if the range of dates was user selected.
  function computeTitle(selectDates) {
    if (selectDates == true) {
      return $.fullCalendar.formatDate(startDate, "MMM dd, yyyy") + " to " +
          $.fullCalendar.formatDate(endDate, "MMM dd, yyyy");
    } 
    else if (calendarView == 'month') {
      return $.fullCalendar.formatDate(startDate, "MMM yyyy");
    }
    else if (calendarView == 'agendaWeek') {
      // The end date is exclusive. Therefore we must subtract one day.
      return $.fullCalendar.formatDate(startDate, "MMM dd, yyyy") + " to " +
          $.fullCalendar.formatDate(endDate, "MMM dd, yyyy");
    }   
    else if (calendarView == 'agendaDay'){
      return $.fullCalendar.formatDate(startDate, "MMM dd, yyyy");
    }
  }


  // Function that we use to filter with
  function filterDateFunction(activity, index) {
    var startTime = activity['startTime'];
    return startTime > startDate && startTime < endDate;
  }

  // Grep is the Jquery equivalent of the higher order function filter.
  // Returns a new array of events consisting of all elements that the filter
  //  function filterDateFunction returned true for
  function filterEventsByDate(events) {
    var filteredEvents = $.grep(events, filterDateFunction);
    return filteredEvents;
  }

  // The parameter selectRange is true if the range of dates was user selected.
  function updatePieChart(selectRange) {
    $('#chart_div').empty();
    tagTimes=new Array();	
    var pieChartTitle = computeTitle(selectRange);
    var filteredEvents = filterEventsByDate(unencryptedEvents);
    computeTagTimes(filteredEvents);
    drawChart(pieChartTitle);
  }

  function drawChart(pieChartTitle) {
    var data = new google.visualization.DataTable();
	  data.addColumn('string', 'Event');
    data.addColumn('number', 'Hours');
    for(var tag in tagTimes) {
      if (tag == '') {
        data.addRow(['Other',  tagTimes[tag]]);
      }
      else {
        data.addRow([tag,  tagTimes[tag]]);	 	
      }
    }
    var chart = new google.visualization.PieChart(document.getElementById('chart_div'));
    chart.draw(data, { chartArea:{width:"95%",height:"80%"}, width: 550, height: 360, title: "My Events for " + pieChartTitle + " (in hours)", titleTextStyle: {color: "Black", fontName: "Arial", fontSize: 20}});
  }
  $(document).ready(function(){
      var selectDate = function(dateText, inst) {
      var startDateText = $('#startPicker').val();
      var endDateText = $('#endPicker').val();

      if (startDateText != "" && endDateText != "") {
        startDate = Date.parse(startDateText);
        endDate = Date.parse(endDateText);
        $('#prevBtn' ).button( "option", "disabled", true );
        $('#nextBtn' ).button( "option", "disabled", true );
        updatePieChart(true);
      }
      }
      $('.datepicker').datepicker({onSelect: selectDate}); 

      $('#prevBtn').text('Previous ' + convertViewToDate[calendarView]);
      $('#nextBtn').text('Next ' + convertViewToDate[calendarView]);
      $('[type="button"]').button();

      $('#prevBtn').click(function(){
        if (calendarView == 'month') {
        startDate = startDate.add(-1).months();
        startDate.moveToFirstDayOfMonth();
        endDate = endDate.add(-1).months();
        endDate.moveToLastDayOfMonth();

        } else if (calendarView == 'agendaWeek') {
        startDate = startDate.add(-1).weeks();
        endDate = endDate.add(-1).weeks();
        } else {
        startDate = startDate.add(-1).days();
        endDate = endDate.add(-1).days();

        }
        updatePieChart();
        });
      $('#nextBtn').click(function(){
          if (calendarView == 'month') {
          startDate = startDate.add(1).months();
          startDate.moveToFirstDayOfMonth();
          endDate = endDate.add(1).months();
          endDate.moveToLastDayOfMonth();
          } else if (calendarView == 'agendaWeek') {
          startDate = startDate.add(1).weeks();
          endDate = endDate.add(1).weeks();
          } else {
          startDate = startDate.add(1).days();
          endDate = endDate.add(1).days();

          }
          updatePieChart();
          });

  });
</script>

